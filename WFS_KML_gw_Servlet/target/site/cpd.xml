<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="123" tokens="475">
<file line="76" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<file line="157" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
				kmlout.write("<description>test file</description>\n");
			
				kmlStyle( );
				kmlRegion( bbox );
				kmlPlacemarks( featureCollection, geomCRS );
				
				kmlout.write("</Folder>\n");
				kmlout.write("</Document>\n");
				kmlout.write("</kml>\n");
				
				kmlout.close();
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
		
		/**
		 * Define the style asociated to the features
		 */
		private void kmlStyle() {
			kmlout.write("\n<Style id=\"default\">\n");
			kmlout.write("	<LineStyle>\n");
			kmlout.write("		<width>1.5</width>\n");
			kmlout.write("	</LineStyle>\n");
			kmlout.write("	<PolyStyle>\n");
			kmlout.write("		<color>7d00ffff</color>\n");
			kmlout.write("	</PolyStyle>\n");
			kmlout.write("</Style>\n");
		}
				
		/**
		 * @param bbox 	Space region that defines the KML viewer focus. 
		 * 				All the features are inside of this Bounding Box
		 */
		private void kmlRegion(Envelope bbox) {

			kmlout.write("\n<Region>\n");
			kmlout.write("	<LatLonAltBox>\n");
			kmlout.write("		<north>"+bbox.getMaxY()+"</north>\n");
			kmlout.write("		<south>"+bbox.getMinY()+"</south>\n");
			kmlout.write("		<east>"+bbox.getMaxX()+"</east>\n");
			kmlout.write("		<west>"+bbox.getMinX()+"</west>\n");
			kmlout.write("		<altitudeMode>relativeToGround</altitudeMode>\n");	
			kmlout.write("	</LatLonAltBox>\n"); 
			kmlout.write("	<Lod>\n");
			kmlout.write("		<minLodPixels>0</minLodPixels>\n");		//TODO Revisar
			kmlout.write("	</Lod>\n");
			kmlout.write("</Region>\n");
		}
		
		/**
		 * @param featureCollection	All the features to be represented
		 */
		private void kmlPlacemarks(FeatureCollection featureCollection, CoordinateReferenceSystem geomCRS) {
			Iterator iterator = featureCollection.iterator();			// Feature
	        try {
	            for( int f=0; iterator.hasNext(); f++) {
	                Feature feature = (Feature) iterator.next();
					kmlout.write("\n<Placemark>\n");  						
					kmlout.write("<name>"+feature.getID() +"</name>\n");
					kmlout.write("<styleUrl>default</styleUrl>\n");
					
					kmlGeometries( feature, geomCRS );
					
					kmlout.write("</Placemark>\n");
	            }
	        }
	        finally {
	            	featureCollection.close( iterator );
	        }
		}
		
		/**
		 * @param feature	Feature to extract their geometries
		 */
		private void kmlGeometries(Feature feature, CoordinateReferenceSystem geomCRS) {
			
			boolean multiGeometry = false;
			double zCoord;
			CoordinateReferenceSystem kmlCRS;
			
			try {
				
			kmlCRS = CRS.decode("EPSG:4326");
			
			if (feature.getPrimaryGeometry().getNumGeometries()>1){	
				kmlout.write("<MultiGeometry>\n");
				multiGeometry = true;
			}
			for(int g=0; g<feature.getPrimaryGeometry().getNumGeometries(); g++){  // Geometry
				kmlout.write("<Polygon>\n");					// 	TODO geometrias diferentes de "poligon" 
				kmlout.write("<extrude>1</extrude>\n");
				//kmlout.write("<tessellate>1</tessellate>\n");  	TODO Activar para poligonos grandes.
				kmlout.write("<altitudeMode>relativeToGround</altitudeMode>\n");	// TODO Otros altitudeMode
				
				kmlout.write("<outerBoundaryIs>\n");  // TODO prever InnerBoundaryIS
				
				kmlout.write("<LinearRing>\n");
				kmlout.write("<coordinates>\n");
				// JTSUtilities
				
				// zMinMax(Coordinate[] cs)
		        //  Determine the min and max "z" values in an array of Coordinates.
				
				// guessCoorinateDims(Coordinate[] cs)
//		          Returns:
//		        	  2 for 2d (default)
//		        	  4 for 3d - one of the oordinates has a non-NaN z value
//		        	  (3 is for x,y,m but thats not supported yet) 
				
//				findBestGeometryType(Geometry geom)
//		          Determine the best ShapeType for a given Geometry.
				
				Geometry geomGeometry = feature.getPrimaryGeometry().getGeometryN(g);
				
				MathTransform transform = CRS.findMathTransform(geomCRS, kmlCRS);
				Geometry kmlGeometry = JTS.transform( geomGeometry, transform);
					
				Coordinate coord[] = kmlGeometry.getCoordinates();
				
				if (zAttribute != null) { //.length() != 0 ) {	// If the user has selected the height attribute
]]>
</codefragment>
</duplication>
<duplication lines="42" tokens="275">
<file line="201" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<file line="279" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
				if (zAttribute != null) { //.length() != 0 ) {	// If the user has selected the height attribute
					FeatureType featureType = feature.getFeatureType();
					
					int attrPos = featureType.find(zAttribute);	
					if (attrPos == -1) {			// If the attribute doesn't exist
						zCoord = 0;
					} else {						// If the attribute exist
						if (!(feature.getAttribute(attrPos) instanceof Number)) {
							System.out.print("Height attribute isn't a number");
							zCoord = 0;
						}					
						if ((feature.getAttribute(attrPos) instanceof Float) || (feature.getAttribute(attrPos) instanceof Double)) {
							Double zCoordDouble = (Double)feature.getAttribute(attrPos); 
							zCoord = zCoordDouble.doubleValue();
						} else {
							Long zCoordLong = (Long)feature.getAttribute(attrPos); 
							zCoord = zCoordLong.longValue();
						}
						
					}		
		        	for(int j=0;j<coord.length;j++){
		        		kmlout.write( coord[j].x +"," + coord[j].y + "," + zCoord/scale + " "); 
		        	}
		        } else {	// If the user hasn't selected the height attribute (Geometries with 3 coordinates)
	        		for(int j=0;j<coord.length;j++){
		        		kmlout.write( coord[j].x +"," + coord[j].y + "," + coord[j].z/scale + " "); 
		        	} // TODO sustituir NaN en coord z por 0
	        	}
		        
				kmlout.write("\n</coordinates>\n");
				kmlout.write("</LinearRing>\n");
				kmlout.write("</outerBoundaryIs>\n");
				kmlout.write("</Polygon>\n");
			}	
			if (multiGeometry) kmlout.write("</MultiGeometry>\n");
			
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

	}
]]>
</codefragment>
</duplication>
<duplication lines="25" tokens="129">
<file line="65" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_CLA.java"/>
<file line="92" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
			typeName = layer; 
			FeatureType schema = wfs.describeFeatureType( typeName ); 	// Feature
			
			// Query   //TODO El CRS de KML no es sólo 4326.Hay que especificar más.
			CoordinateReferenceSystem kmlCRS = CRS.decode("EPSG:4326"); 
			ReferencedEnvelope bbox = new ReferencedEnvelope( xMin, xMax, yMin, yMax, kmlCRS );			
			
			String geomName = schema.getPrimaryGeometry().getLocalName();
			CoordinateReferenceSystem geomCRS = schema.getPrimaryGeometry().getCoordinateSystem(); 
			
			CreateQuery query;
			if (!kmlCRS.equals(geomCRS)) {
				ReferencedEnvelope geomBbox = bbox.transform( geomCRS, true, 10 ); // Sample 10 points around the envelope
				query = new CreateQuery(geomName, geomBbox);
			} else {
				query = new CreateQuery(geomName, bbox);
			}
			
			Query featuresIntersectsBbox = query.queryIntersects(typeName);
			
			
			//De momento sólo devuelve una coleccion de features de un único FeatureType
			//habría que pasarle como argumento featureType[] -> NO, UN UNICO FEATURE PARA ELEGIR EL HEIGHT ATTRIBUTE
			//(¿y query[]? ¿o en main?)			
			FeatureCollection featureCollection = wfs.getFeature( typeName , featuresIntersectsBbox );
]]>
</codefragment>
</duplication>
<duplication lines="13" tokens="56">
<file line="91" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_CLA.java"/>
<file line="124" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
            createFile( featureCollection, bbox, geomCRS );
            
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/**
	 * 
	 */
	public static void supressInfo(){
		Logger.getLogger("org.geotools.gml").setLevel( Level.SEVERE );
		Logger.getLogger("net.refractions.xml").setLevel( Level.SEVERE);
	}
]]>
</codefragment>
</duplication>
<duplication lines="5" tokens="42">
<file line="41" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="115" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<codefragment>
<![CDATA[
		Iterator iterator = featureCollection.iterator();
	    try {
	        for( int count=0; iterator.hasNext(); count++) {
	            Feature feature = (Feature) iterator.next();
	            System.out.print("\n\n\n" + feature.getID() + "\t");
]]>
</codefragment>
</duplication>
<duplication lines="17" tokens="41">
<file line="56" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<file line="136" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
	}
	


		/**
		 * Output KML file
		 * 
		 * @param featureCollection	Features to be translated into a KML format
		 * @param bbox				Space region that defines the KML viewer focus. 
		 * 							All the features are inside of this Bounding Box
		 */
		public void createFile(FeatureCollection featureCollection, Envelope bbox, CoordinateReferenceSystem geomCRS){  
			try{				
				kmlout.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
				kmlout.write("<kml xmlns=\"http://earth.google.com/kml/2.2\">\n\n");
				kmlout.write("<Document>\n");
				kmlout.write("<name>"+typeName+"</name>\n");
]]>
</codefragment>
</duplication>
<duplication lines="2" tokens="37">
<file line="222" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<file line="226" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
        		for(int j=0;j<coord.length;j++){
	        		kmlout.write( coord[j].x +"," + coord[j].y + "," + coord[j].z/scale + " ");
]]>
</codefragment>
</duplication>
<duplication lines="6" tokens="29">
<file line="71" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<file line="152" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
				kmlout.write("<name>"+typeName+"</name>\n");
				
				kmlout.write("\n<Folder>\n");
				kmlout.write("<name>"+typeName+"</name>\n"); 
				kmlout.write("<open>1</open>\n");
				kmlout.write("<description>test file</description>\n");
]]>
</codefragment>
</duplication>
<duplication lines="6" tokens="24">
<file line="53" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_CLA.java"/>
<file line="81" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
		if(map.containsKey("scale")) scale= Double.valueOf( ((String[])map.get("scale"))[0] ).doubleValue();
		
		try {
			supressInfo();
			WFSClient wfs = new WFSClient();
			wfs.getCapabilities( server ); 								// Connection
]]>
</codefragment>
</duplication>
<duplication lines="3" tokens="19">
<file line="84" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="100" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<codefragment>
<![CDATA[
        System.out.println("\nGeometry attributes:");    
    	for (int i = 0; i < schema.getAttributeCount(); i++) {
	        AttributeType at = schema.getAttributeType(i);
]]>
</codefragment>
</duplication>
<duplication lines="1" tokens="17">
<file line="125" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="223" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
	        		kmlout.write( coord[j].x +"," + coord[j].y + "," + zCoord/scale + " "); 
]]>
</codefragment>
</duplication>
<duplication lines="6" tokens="15">
<file line="167" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<file line="313" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
			if (multiGeometry) kmlout.write("</MultiGeometry>\n");
			
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
]]>
</codefragment>
</duplication>
<duplication lines="3" tokens="15">
<file line="151" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<file line="154" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
				kmlout.write("\n<Folder>\n");
				kmlout.write("<name>"+typeName+"</name>\n"); 
				kmlout.write("<open>1</open>\n");
]]>
</codefragment>
</duplication>
<duplication lines="6" tokens="15">
<file line="86" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<file line="236" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<file line="91" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_CLA.java"/>
<codefragment>
<![CDATA[
            kmlFile.createFile( featureCollection, bbox, geomCRS );
            
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
]]>
</codefragment>
</duplication>
<duplication lines="1" tokens="15">
<file line="124" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="222" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
	        	for(int j=0;j<coord.length;j++){
]]>
</codefragment>
</duplication>
<duplication lines="4" tokens="15">
<file line="114" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="136" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
	private void kmlPlacemarks(FeatureCollection featureCollection, CoordinateReferenceSystem geomCRS) {
		Iterator iterator = featureCollection.iterator();			// Feature
        try {
            for( int f=0; iterator.hasNext(); f++) {
]]>
</codefragment>
</duplication>
<duplication lines="2" tokens="14">
<file line="117" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="139" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
            for( int f=0; iterator.hasNext(); f++) {
                Feature feature = (Feature) iterator.next();
]]>
</codefragment>
</duplication>
<duplication lines="7" tokens="14">
<file line="55" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="129" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<codefragment>
<![CDATA[
	            if( count == 4) break; // only 4 features
	        }
	    }
	    finally {
	    	featureCollection.close( iterator );
	    }
    }
]]>
</codefragment>
</duplication>
<duplication lines="2" tokens="14">
<file line="43" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="139" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
            for( int f=0; iterator.hasNext(); f++) {
                Feature feature = (Feature) iterator.next();
]]>
</codefragment>
</duplication>
<duplication lines="6" tokens="12">
<file line="56" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="148" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
            }
        }
        finally {
            	featureCollection.close( iterator );
        }
	}
]]>
</codefragment>
</duplication>
<duplication lines="2" tokens="11">
<file line="79" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<file line="80" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
		if(map.containsKey("zAttribute")) zAttribute = ((String[])map.get("zAttribute"))[0];
		if(map.containsKey("scale")) scale= Double.valueOf( ((String[])map.get("scale"))[0] ).doubleValue();
]]>
</codefragment>
</duplication>
<duplication lines="1" tokens="11">
<file line="79" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<file line="80" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
		if(map.containsKey("zAttribute")) zAttribute = ((String[])map.get("zAttribute"))[0];
]]>
</codefragment>
</duplication>
<duplication lines="2" tokens="11">
<file line="78" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<file line="79" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
		if(map.containsKey("server")) server = ((String[])map.get("server"))[0];
		if(map.containsKey("zAttribute")) zAttribute = ((String[])map.get("zAttribute"))[0];
]]>
</codefragment>
</duplication>
<duplication lines="1" tokens="11">
<file line="78" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<file line="79" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
		if(map.containsKey("server")) server = ((String[])map.get("server"))[0];
]]>
</codefragment>
</duplication>
<duplication lines="9" tokens="11">
<file line="52" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<file line="93" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_CLA.java"/>
<codefragment>
<![CDATA[
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * 
	 */
	public static void supressInfo(){
]]>
</codefragment>
</duplication>
<duplication lines="2" tokens="11">
<file line="68" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="83" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="99" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<codefragment>
<![CDATA[
    public static void getGeometryAttributes(FeatureType schema) {
        System.out.println("\nGeometry attributes:");    
]]>
</codefragment>
</duplication>
<duplication lines="2" tokens="11">
<file line="45" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="121" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<codefragment>
<![CDATA[
	            System.out.println(feature.getPrimaryGeometry().getNumGeometries() + "\n");
	            for(int i=0; i<feature.getPrimaryGeometry().getNumGeometries(); i++){
]]>
</codefragment>
</duplication>
<duplication lines="2" tokens="11">
<file line="30" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="74" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<codefragment>
<![CDATA[
		for(int i=0;i<attributes.length;i++)
			System.out.println( attributes[i] );
]]>
</codefragment>
</duplication>
<duplication lines="1" tokens="10">
<file line="78" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<file line="81" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\WFS_KML_gw_Servlet.java"/>
<codefragment>
<![CDATA[
		if(map.containsKey("scale")) scale= Double.valueOf( ((String[])map.get("scale"))[0] ).doubleValue();
]]>
</codefragment>
</duplication>
<duplication lines="5" tokens="10">
<file line="52" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<file line="88" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
]]>
</codefragment>
</duplication>
<duplication lines="1" tokens="10">
<file line="122" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="170" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
		for(int g=0; g<feature.getPrimaryGeometry().getNumGeometries(); g++){  // Geometry
]]>
</codefragment>
</duplication>
<duplication lines="1" tokens="10">
<file line="121" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\Info.java"/>
<file line="166" path="C:\Documents and Settings\Ed\workspace java\WFS_KML_gw\WFS_KML_gw_Servlet\src\main\java\es\uva\pfc\eduardoRiesco\KMLFileWriter.java"/>
<codefragment>
<![CDATA[
		if (feature.getPrimaryGeometry().getNumGeometries()>1){	
]]>
</codefragment>
</duplication>
</pmd-cpd>